ss <- sample(1:1000, 800)
# Subconjunto en USArrests
df_1 <- df[ss, ]
# Estandarizar variables
df.scaled <- scale(df_1[,-1])
m <- as.matrix(df_1[,-1])
row.names(m) <- df_1[, 1]
m
#Análisis de k-medias. Importante que nstart sea "grande".
km.res <- kmeans(m, 3, nstart = 20)
fviz_cluster(km.res, data = df_1[,-1],
palette = c("#2E9FDF", "#00AFBB", "#E7B800", "#FC4E07"),
ellipse.type = "euclid", # Concentration ellipse
star.plot = TRUE, # Add segments from centroids to items
repel = TRUE, # Avoid label overplotting (slow)
ggtheme = theme_minimal())
#Análisis de k-medias. Importante que nstart sea "grande".
km.res <- kmeans(m, 2, nstart = 20)
fviz_cluster(km.res, data = df_1[,-1],
palette = c("#2E9FDF", "#00AFBB", "#E7B800", "#FC4E07"),
ellipse.type = "euclid", # Concentration ellipse
star.plot = TRUE, # Add segments from centroids to items
repel = TRUE, # Avoid label overplotting (slow)
ggtheme = theme_minimal())
#Datos aleatorios
set.seed(123)
#Tomar 50 aleatorios entre 1 y 50
ss <- sample(1:1000, 500)
# Subconjunto en USArrests
df_1 <- df[ss, ]
# Estandarizar variables
df.scaled <- scale(df_1[,-1])
m <- as.matrix(df_1[,-1])
row.names(m) <- df_1[, 1]
m
#Análisis de k-medias. Importante que nstart sea "grande".
km.res <- kmeans(m, 2, nstart = 20)
fviz_cluster(km.res, data = df_1[,-1],
palette = c("#2E9FDF", "#00AFBB", "#E7B800", "#FC4E07"),
ellipse.type = "euclid", # Concentration ellipse
star.plot = TRUE, # Add segments from centroids to items
repel = TRUE, # Avoid label overplotting (slow)
ggtheme = theme_minimal())
#Análisis de k-medias. Importante que nstart sea "grande".
km.res <- kmeans(m, 2, nstart = 1)
fviz_cluster(km.res, data = df_1[,-1],
palette = c("#2E9FDF", "#00AFBB", "#E7B800", "#FC4E07"),
ellipse.type = "euclid", # Concentration ellipse
star.plot = TRUE, # Add segments from centroids to items
repel = TRUE, # Avoid label overplotting (slow)
ggtheme = theme_minimal())
#Análisis de k-medias. Importante que nstart sea "grande".
km.res <- kmeans(m, 2, iter.max = 200 ,nstart = 1)
fviz_cluster(km.res, data = df_1[,-1],
palette = c("#2E9FDF", "#00AFBB", "#E7B800", "#FC4E07"),
ellipse.type = "euclid", # Concentration ellipse
star.plot = TRUE, # Add segments from centroids to items
repel = TRUE, # Avoid label overplotting (slow)
ggtheme = theme_minimal())
#Análisis de k-medias. Importante que nstart sea "grande".
km.res <- kmeans(m, 2, iter.max = 800 ,nstart = 1)
fviz_cluster(km.res, data = df_1[,-1],
palette = c("#2E9FDF", "#00AFBB", "#E7B800", "#FC4E07"),
ellipse.type = "euclid", # Concentration ellipse
star.plot = TRUE, # Add segments from centroids to items
repel = TRUE, # Avoid label overplotting (slow)
ggtheme = theme_minimal())
#Análisis de k-medias. Importante que nstart sea "grande".
km.res <- kmeans(m, 3, iter.max = 800 ,nstart = 25)
fviz_cluster(km.res, data = df_1[,-1],
palette = c("#2E9FDF", "#00AFBB", "#E7B800", "#FC4E07"),
ellipse.type = "euclid", # Concentration ellipse
star.plot = TRUE, # Add segments from centroids to items
repel = TRUE, # Avoid label overplotting (slow)
ggtheme = theme_minimal())
#Datos aleatorios
set.seed(123)
#Tomar 50 aleatorios entre 1 y 50
ss <- sample(1:200, 100)
# Subconjunto en USArrests
df_1 <- df[ss, ]
# Estandarizar variables
df.scaled <- scale(df_1[,-1])
#Análisis de k-medias. Importante que nstart sea "grande".
km.res <- kmeans(m, 3, iter.max = 800 ,nstart = 25)
fviz_cluster(km.res, data = df_1[,-1],
palette = c("#2E9FDF", "#00AFBB", "#E7B800", "#FC4E07"),
ellipse.type = "euclid", # Concentration ellipse
star.plot = TRUE, # Add segments from centroids to items
repel = TRUE, # Avoid label overplotting (slow)
ggtheme = theme_minimal())
#Datos aleatorios
set.seed(123)
#Tomar 50 aleatorios entre 1 y 50
ss <- sample(1:100, 50)
# Subconjunto en USArrests
df_1 <- df[ss, ]
# Estandarizar variables
df.scaled <- scale(df_1[,-1])
#Análisis de k-medias. Importante que nstart sea "grande".
km.res <- kmeans(m, 2, iter.max = 200 ,nstart = 25)
fviz_cluster(km.res, data = df_1[,-1],
palette = c("#2E9FDF", "#00AFBB", "#E7B800", "#FC4E07"),
ellipse.type = "euclid", # Concentration ellipse
star.plot = TRUE, # Add segments from centroids to items
repel = TRUE, # Avoid label overplotting (slow)
ggtheme = theme_minimal())
pam.res <- pam(m, 2)
fviz_cluster(pam.res,
palette = c("#00AFBB", "#FC4E07"), # color palette
ellipse.type = "t", # Concentration ellipse
repel = TRUE, # Avoid label overplotting (slow)
ggtheme = theme_classic()
)
pam.res <- pam(m[,-1], 2)
fviz_cluster(pam.res,
palette = c("#00AFBB", "#FC4E07"), # color palette
ellipse.type = "t", # Concentration ellipse
repel = TRUE, # Avoid label overplotting (slow)
ggtheme = theme_classic()
)
pam.res <- pam(df_1, 2)
fviz_cluster(pam.res,
palette = c("#00AFBB", "#FC4E07"), # color palette
ellipse.type = "t", # Concentration ellipse
repel = TRUE, # Avoid label overplotting (slow)
ggtheme = theme_classic()
)
#Datos aleatorios
set.seed(123)
#Tomar 50 aleatorios entre 1 y 50
ss <- sample(1:200, 100)
# Subconjunto en USArrests
df_1 <- df[ss, ]
# Estandarizar variables
df.scaled <- scale(df_1[,-1])
fviz_cluster(pam.res,
palette = c("#00AFBB", "#FC4E07"), # color palette
ellipse.type = "t", # Concentration ellipse
repel = TRUE, # Avoid label overplotting (slow)
ggtheme = theme_classic()
)
fviz_cluster(km.res, data = df_1[,-1],
palette = c("#2E9FDF", "#00AFBB", "#E7B800", "#FC4E07"),
ellipse.type = "euclid", # Concentration ellipse
# Add segments from centroids to items
repel = TRUE, # Avoid label overplotting (slow)
ggtheme = theme_minimal())
fviz_cluster(km.res, data = df_1[,-1],
palette = c("#2E9FDF", "#00AFBB", "#E7B800", "#FC4E07"),
ellipse.type = "t", # Concentration ellipse
star.plot = TRUE, # Add segments from centroids to items
repel = TRUE, # Avoid label overplotting (slow)
ggtheme = theme_minimal())
fviz_cluster(km.res, data = df_1[,-1],
palette = c("#2E9FDF", "#00AFBB", "#E7B800", "#FC4E07"),
ellipse.type = "norm", # Concentration ellipse
star.plot = TRUE, # Add segments from centroids to items
repel = TRUE, # Avoid label overplotting (slow)
ggtheme = theme_minimal())
#Datos aleatorios
set.seed(123)
#Tomar 50 aleatorios entre 1 y 50
ss <- sample(1:50, 40)
# Subconjunto en USArrests
df_1 <- df[ss, ]
# Estandarizar variables
df.scaled <- scale(df_1[,-1])
fviz_cluster(km.res, data = df_1[,-1],
palette = c("#2E9FDF", "#00AFBB", "#E7B800", "#FC4E07"),
ellipse.type = "norm", # Concentration ellipse
star.plot = TRUE, # Add segments from centroids to items
repel = TRUE, # Avoid label overplotting (slow)
ggtheme = theme_minimal())
#Análisis de k-medias. Importante que nstart sea "grande".
km.res <- kmeans(m, 2, iter.max = 200 ,nstart = 25)
fviz_cluster(km.res, data = df_1[,-1],
palette = c("#2E9FDF", "#00AFBB", "#E7B800", "#FC4E07"),
ellipse.type = "norm", # Concentration ellipse
star.plot = TRUE, # Add segments from centroids to items
repel = TRUE, # Avoid label overplotting (slow)
ggtheme = theme_minimal())
#Datos aleatorios
set.seed(123)
#Tomar 50 aleatorios entre 1 y 50
ss <- sample(1:50, 40)
# Subconjunto en USArrests
df_1 <- df[ss, ]
# Estandarizar variables
df.scaled <- scale(df_1[,-1])
#Análisis de k-medias. Importante que nstart sea "grande".
km.res <- kmeans(m, 2, iter.max = 200 ,nstart = 25)
fviz_cluster(km.res, data = df_1[,-1],
palette = c("#2E9FDF", "#00AFBB", "#E7B800", "#FC4E07"),
ellipse.type = "norm", # Concentration ellipse
star.plot = TRUE, # Add segments from centroids to items
repel = TRUE, # Avoid label overplotting (slow)
ggtheme = theme_minimal())
#Análisis de k-medias. Importante que nstart sea "grande".
km.res <- kmeans(m, 3, iter.max = 100 ,nstart = 20)
fviz_cluster(km.res, data = df_1[,-1],
palette = c("#2E9FDF", "#00AFBB", "#E7B800", "#FC4E07"),
ellipse.type = "norm", # Concentration ellipse
star.plot = TRUE, # Add segments from centroids to items
repel = TRUE, # Avoid label overplotting (slow)
ggtheme = theme_minimal())
#Datos aleatorios
set.seed(123)
#Tomar 50 aleatorios entre 1 y 50
ss <- sample(1:50, 40)
# Subconjunto en USArrests
df_1 <- df[ss, ]
# Estandarizar variables
df.scaled <- scale(df_1[,-1])
m <- as.matrix(df_1[,-1])
row.names(m) <- df_1[, 1]
m
#Análisis de k-medias. Importante que nstart sea "grande".
km.res <- kmeans(m, 3, iter.max = 100 ,nstart = 20)
fviz_cluster(km.res, data = df_1[,-1],
palette = c("#2E9FDF", "#00AFBB", "#E7B800", "#FC4E07"),
ellipse.type = "norm", # Concentration ellipse
star.plot = TRUE, # Add segments from centroids to items
repel = TRUE, # Avoid label overplotting (slow)
ggtheme = theme_minimal())
#Análisis de k-medias. Importante que nstart sea "grande".
km.res <- kmeans(m, 2, iter.max = 100 ,nstart = 20)
fviz_cluster(km.res, data = df_1[,-1],
palette = c("#2E9FDF", "#00AFBB", "#E7B800", "#FC4E07"),
ellipse.type = "norm", # Concentration ellipse
star.plot = TRUE, # Add segments from centroids to items
repel = TRUE, # Avoid label overplotting (slow)
ggtheme = theme_minimal())
fviz_cluster(pam.res,
palette = c("#00AFBB", "#FC4E07"), # color palette
ellipse.type = "t", # Concentration ellipse
repel = TRUE, # Avoid label overplotting (slow)
ggtheme = theme_classic()
)
#Datos aleatorios
set.seed(123)
#Tomar 50 aleatorios entre 1 y 50
ss <- sample(1:70, 60)
# Subconjunto en USArrests
df_1 <- df[ss, ]
# Estandarizar variables
df.scaled <- scale(df_1[,-1])
m <- as.matrix(df_1[,-1])
row.names(m) <- df_1[, 1]
m
#Análisis de k-medias. Importante que nstart sea "grande".
km.res <- kmeans(m, 2, iter.max = 100 ,nstart = 20)
fviz_cluster(km.res, data = df_1[,-1],
palette = c("#2E9FDF", "#00AFBB", "#E7B800", "#FC4E07"),
ellipse.type = "norm", # Concentration ellipse
star.plot = TRUE, # Add segments from centroids to items
repel = TRUE, # Avoid label overplotting (slow)
ggtheme = theme_minimal())
fviz_cluster(pam.res,
palette = c("#00AFBB", "#FC4E07"), # color palette
ellipse.type = "t", # Concentration ellipse
repel = TRUE, # Avoid label overplotting (slow)
ggtheme = theme_classic()
)
print(pam.res)
fviz_cluster(km.res, data = m,
palette = c("#2E9FDF", "#00AFBB", "#E7B800", "#FC4E07"),
ellipse.type = "norm", # Concentration ellipse
star.plot = TRUE, # Add segments from centroids to items
repel = TRUE, # Avoid label overplotting (slow)
ggtheme = theme_minimal())
o <- scales(df_1)
o <- scale(df_1)
o <- scale(df_1[,-1])
o
rownames(o)
rownames(o) <- df_1[,1]
row.names(o)
pam.res <- pam(o, 2)
fviz_cluster(pam.res,
palette = c("#00AFBB", "#FC4E07"), # color palette
ellipse.type = "t", # Concentration ellipse
repel = TRUE, # Avoid label overplotting (slow)
ggtheme = theme_classic()
)
o <- scale(df_1[,-1])
fviz_cluster(pam.res,
palette = c("#00AFBB", "#FC4E07"), # color palette
ellipse.type = "t", # Concentration ellipse
repel = TRUE, # Avoid label overplotting (slow)
ggtheme = theme_classic()
)
pam.res <- pam(o, 2)
fviz_cluster(pam.res,
palette = c("#00AFBB", "#FC4E07"), # color palette
ellipse.type = "t", # Concentration ellipse
repel = TRUE, # Avoid label overplotting (slow)
ggtheme = theme_classic()
)
print(pam.res)
fviz_cluster(km.res, data = o,
palette = c("#2E9FDF", "#00AFBB", "#E7B800", "#FC4E07"),
ellipse.type = "norm", # Concentration ellipse
star.plot = TRUE, # Add segments from centroids to items
repel = TRUE, # Avoid label overplotting (slow)
ggtheme = theme_minimal())
fviz_cluster(km.res, data = o,
palette = c("#2E9FDF", "#FC4E07", "#E7B800", "#FC4E07"),
ellipse.type = "norm", # Concentration ellipse
star.plot = TRUE, # Add segments from centroids to items
repel = TRUE, # Avoid label overplotting (slow)
ggtheme = theme_minimal())
km.res$cluster
#Análisis de k-medias. Importante que nstart sea "grande".
km.res <- kmeans(m, 2, iter.max = 100 ,nstart = 20)
fviz_cluster(km.res, data = m,
palette = c("#2E9FDF", "#FC4E07", "#E7B800", "#FC4E07"),
ellipse.type = "norm", # Concentration ellipse
star.plot = TRUE, # Add segments from centroids to items
repel = TRUE, # Avoid label overplotting (slow)
ggtheme = theme_minimal())
fviz_cluster(km.res, data = o,
palette = c("#2E9FDF", "#FC4E07", "#E7B800", "#FC4E07"),
ellipse.type = "norm", # Concentration ellipse
star.plot = TRUE, # Add segments from centroids to items
repel = TRUE, # Avoid label overplotting (slow)
ggtheme = theme_minimal())
set.seed(123)
ss <- sample(1:70, 60)
df_1 <- df[ss, ]
m <- as.matrix(df_1[,-1])
row.names(m) <- df_1[, 1]
o <- scale(df_1[,-1])
#Análisis de k-medias. Importante que nstart sea "grande".
km.res <- kmeans(m, 2, iter.max = 100 ,nstart = 20)
km.res$cluster
fviz_cluster(km.res, data = o,
palette = c("#2E9FDF", "#FC4E07", "#E7B800", "#FC4E07"),
ellipse.type = "norm", # Concentration ellipse
star.plot = TRUE, # Add segments from centroids to items
repel = TRUE, # Avoid label overplotting (slow)
ggtheme = theme_minimal())
pam.res <- pam(o, 2)
fviz_cluster(pam.res,
palette = c("#00AFBB", "#FC4E07"), # color palette
ellipse.type = "t", # Concentration ellipse
repel = TRUE, # Avoid label overplotting (slow)
ggtheme = theme_classic()
)
print(pam.res)
km.res$cluster
print(km.res)
print(km.res)
aggregate(df_1, by=list(cluster=km.res$cluster), mean)
dd <- cbind(df_1, cluster = km.res$cluster)
head(dd)
aggregate(df_1, by=list(cluster=km.res$cluster), mean)
dd <- cbind(df_1, cluster = km.res$cluster)
head(dd)
aggregate(df_1, by=list(cluster=km.res$cluster), mean)
dd <- cbind(df_1, cluster = km.res$cluster)
dd
km.res
km.res[1,]
km.res[,]
km.res
knitr::opts_chunk$set(echo = TRUE)
m <- as.matrix(df_1[,-1])
row.names(m) <- df_1[, 1]
o <- scale(df_1[,-1])
fviz_nbclust(m, kmeans, method = "wss")+
geom_vline(xintercept = 2, linetype = 2)
#Análisis de k-medias. Importante que nstart sea "grande".
km.res <- kmeans(m, 2, iter.max = 100 ,nstart = 20)
km.res
aggregate(df_1, by=list(cluster=km.res$cluster), mean)
dd <- cbind(df_1, cluster = km.res$cluster)
dd
knitr::opts_chunk$set(echo = TRUE)
library(factoextra)
library(cluster)
library(FactoMineR)
library(dendextend)
library(corrplot)
library(NbClust)
library(fpc)
library(igraph)
library(clValid)
library(pvclust)
library(clustertend)
library(factoextra)
library(cluster)
library(FactoMineR)
library(dendextend)
library(corrplot)
library(NbClust)
library(fpc)
library(igraph)
library(clValid)
library(pvclust)
library(clustertend)
knitr::opts_chunk$set(echo = TRUE)
df <- read.csv('DB.csv',header = TRUE)
set.seed(123)
ss <- sample(1:70, 60)
df_1 <- df[ss, ]
m <- as.matrix(df_1[,-1])
row.names(m) <- df_1[, 1]
o <- scale(df_1[,-1])
fviz_nbclust(m, kmeans, method = "wss")+
geom_vline(xintercept = 2, linetype = 2)
km.res <- kmeans(m, 2, iter.max = 100 ,nstart = 20)
km.res
aggregate(df_1, by=list(cluster=km.res$cluster), mean)
dd <- cbind(df_1, cluster = km.res$cluster)
dd
df <- read.csv('Data.csv',header = TRUE)
df
df <- read.csv('Data.csv',header = TRUE)
df
m <- as.matrix(df[,-1])
row.names(m) <- df[, 1]
o <- scale(df[,-1])
row.names(m) <- df[,1]
o <- scale(df[,-1])
df <- read.csv('Data.csv',header = TRUE)
df
df <- read.csv('Data2.csv',header = TRUE)
df
df <- read.csv('Data2.csv',header = TRUE, sep = ';')
df
df <- select(df,-X,-X.1)
library(dplyr)
df <- select(df,-X,-X.1)
df
df <- read.csv('Data.csv',header = TRUE, sep = ';')
df
df <- read.csv('Data.csv',header = TRUE, sep = ';')
df <- read.csv('Data2.csv',header = TRUE, sep = ';')
df
df <- read.csv('Data(1).csv',header = TRUE, sep = ';')
df
df <- read.csv('Data(1).csv',header = TRUE)
df
df <- read.csv('Data3.csv',header = TRUE)
df <- read.csv('Data(1).csv',header = TRUE)
df
df <- select(df,-X)
df <- select(df,-x)
df
df <- select(df,-x)
m <- as.matrix(df[,-1])
row.names(m) <- df[,1]
o <- scale(df[,-1])
fviz_nbclust(m, kmeans, method = "wss")+
geom_vline(xintercept = 2, linetype = 2)
km.res <- kmeans(m, 2, iter.max = 100 ,nstart = 20)
fviz_cluster(km.res, data = o,
palette = c("#2E9FDF", "#FC4E07", "#E7B800", "#FC4E07"),
ellipse.type = "norm", # Concentration ellipse
star.plot = TRUE, # Add segments from centroids to items
repel = TRUE, # Avoid label overplotting (slow)
ggtheme = theme_minimal())
pam.res <- pam(o, 2)
fviz_cluster(pam.res,
palette = c("#00AFBB", "#FC4E07"), # color palette
ellipse.type = "t", # Concentration ellipse
repel = TRUE, # Avoid label overplotting (slow)
ggtheme = theme_classic()
)
km.res <- kmeans(m, 2 ,nstart = 20)
fviz_cluster(km.res, data = o,
palette = c("#2E9FDF", "#FC4E07", "#E7B800", "#FC4E07"),
ellipse.type = "norm", # Concentration ellipse
star.plot = TRUE, # Add segments from centroids to items
repel = TRUE, # Avoid label overplotting (slow)
ggtheme = theme_minimal())
km.res <- kmeans(m, 3 ,nstart = 20)
fviz_cluster(km.res, data = o,
palette = c("#2E9FDF", "#FC4E07", "#E7B800", "#FC4E07"),
ellipse.type = "norm", # Concentration ellipse
star.plot = TRUE, # Add segments from centroids to items
repel = TRUE, # Avoid label overplotting (slow)
ggtheme = theme_minimal())
km.res <- kmeans(m, 4 ,nstart = 20)
fviz_cluster(km.res, data = o,
palette = c("#2E9FDF", "#FC4E07", "#E7B800", "#FC4E07"),
ellipse.type = "norm", # Concentration ellipse
star.plot = TRUE, # Add segments from centroids to items
repel = TRUE, # Avoid label overplotting (slow)
ggtheme = theme_minimal())
install.packages("remotes")
remotes::install_github("cienciadedatos/datos")
install.packages("remotes")
knitr::opts_chunk$set(echo = TRUE)
library(datos)
install.packages("remotes")
remotes::install_github("cienciadedatos/datos")
knitr::opts_chunk$set(echo = TRUE)
remotes::install_github("cienciadedatos/datos")
library(datos)
diamantes
paises
vehiculos
comunes
fiel
atmosfera
aerolineas
tabla2
oms
crimtab
iris3
